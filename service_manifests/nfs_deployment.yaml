apiVersion: apps/v1
kind: Deployment
metadata:
  name: NFS_DEPLOYMENT_NAME # NFS_DEPLOYMENT_NAME # nfs-client-provisioner # configured by run_pod.sh # configured by run_pod.sh
  labels:
    app: nfs-client-provisioner
  # replace with namespace where provisioner is deployed
  #namespace: kube-system
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: nfs-client-provisioner
  template:
    metadata:
      labels:
        app: nfs-client-provisioner
    spec:
      serviceAccountName: nfs-client-provisioner
      containers:
        - name: nfs-client-provisioner
          image: quay.io/external_storage/nfs-client-provisioner:latest
          volumeMounts:
            - name: nfs-client-root
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: SCIENCEDATA_PROVISIONER # sciencedata-provisioner # configured by run_pod.sh
            - name: NFS_SERVER
              value: SERVER_IP # configured by run_pod.sh, deploy only if a deployment for the user's server does not exist; delete_pod.sh will delete deployment if no other pods use it
            - name: NFS_PATH
              value: /tank/storage # mount the whole partition; run_pod.sh restricts claim to user dir
      volumes:
        - name: nfs-client-root
          nfs:
            server: SERVER_IP # configured by run_pod.sh
            path: /tank/storage # mount the whole partition; run_pod.sh restricts to user dir
