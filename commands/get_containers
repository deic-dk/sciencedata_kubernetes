#!/bin/bash

user="$@"
TMPDIR="/tmp"

echo "###" >&2
echo "pod_name|container_name|image_name|pod_ip|node_ip|owner|age(s)|status|ssh_port|https_port|uri" >&2
echo "###" >&2
kubectl get pods -o json | jq -r '.items[].metadata.name' | while read pod; do
	podJson="`kubectl get pod "$pod" -o json`"
	hostip=`echo "$podJson" | jq -r '.status.hostIP' | sed 's|null||'`
	podip=`echo "$podJson" | jq -r '.status.podIP' | sed 's|null||'`
	#owner=`echo "$podJson" | jq -r '.metadata.labels | .user+"@"+.domain'`
	username=`echo "$podJson" | jq -r '.metadata.labels | .user'`
	domain=`echo "$podJson" | jq -r '.metadata.labels | .domain'`
	# Crashed pods will also be in phase Running
	state=`echo "$podJson" | jq -r '.status.phase'`
	status=`echo "$podJson" | jq -r '.status.containerStatuses[].state[]  | join(", ")'`
	echo "$status" | grep "," >& /dev/null
	if [ $? -ne 0 ] && [ "$state" == "Running" ]; then
		startTime=`echo "$podJson" | jq -r '.status.startTime'`
		startSeconds=`date -d "$startTime" +"%s"`
		nowSeconds=`date  +"%s"`
		diffSeconds=$((nowSeconds-startSeconds))
	fi
	if [ -n "$domain" ]; then
		owner="$username@$domain"
	else
		owner="$username"
	fi
	if [ -n "$user" -a "$user" != "$owner" ]; then
		continue
	fi
	nodePort=`kubectl get service "${pod}-ssh" -o json 2>/dev/null | jq -r '.spec.ports[].nodePort'`
	reverseProxyPort=`echo "$podJson" | jq -r '.metadata.labels.reverseProxyPort'`
	uri=`cat ${TMPDIR}/uri-${pod} 2>/dev/null`

	kubectl get pod "$pod" -o json | jq -r --arg POD "$pod" --arg HOSTIP "$hostip" --arg PODIP "$podip" \
	--arg OWNER "$owner" --arg AGE "$diffSeconds" --arg STATUS "${state}:${status}" --arg NODEPORT "$nodePort"  \
	--arg REVERSEPROXYPORT "$reverseProxyPort" --arg URI "$uri" \
	'.spec.containers[] | $POD+"|"+.name+"|"+.image+"|"+$PODIP+"|"+$HOSTIP+"|"+$OWNER+"|"+$AGE+"|"+$STATUS+"|"+$NODEPORT+"|"+$REVERSEPROXYPORT+"|"+$URI'
done | sed 's|@$||'
